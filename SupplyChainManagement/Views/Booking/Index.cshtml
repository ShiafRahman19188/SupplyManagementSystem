@using SupplyChainManagement.DTO
@model IEnumerable<BookingInfoDto>

<h2>Booking Data</h2>
<table class="table table-striped">
    <thead>
        <tr>
            <th></th>
            <th>Booking No</th>
            <th>Export Work Order</th>
            <th>Style No</th>
            <th>Fabric</th>
            <th>Buyer</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <button class="btn btn-link toggle-icon" onclick="toggleYarn(this)">
                        &gt;
                    </button>
                </td>
                <td>@item.BookingMasterNo</td>
                <td>@item.ExportWorkOrder</td>
                <td>@item.StyleNo</td>
                <td>@item.Fabric</td>
                <td>@item.SupplierName</td>
            </tr>

            <tr class="yarn-details" style="display: none;">
                <td colspan="6">
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th></th>
                                <th>Item Master Code</th>
                                <th>Item Name</th>
                                <th>PO Quantity</th>
                                <th>UOM</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody id="yarn-list-@item.BookingMasterId">
                            @foreach (var yarn in item.Yarns)
                            {
                                <tr>
                                    <td>
                                        <input type="checkbox" checked disabled />
                                    </td>
                                    <td>@yarn.YarnId</td>
                                    <td>@yarn.Yarn</td>
                                    <td>
                                        <input type="text" class="form-control" placeholder="Enter PO Quantity" />
                                    </td>
                                    <td>
                                        <input type="text" class="form-control" placeholder="Enter UOM" value="Kilogram" disabled/>
                                    </td>
                                    <td></td>
                                </tr>
                            }
                        </tbody>
                    </table>

                    <div style="margin-top: 10px;">
                        <input type="text" id="new-yarn-name-@item.BookingMasterId" placeholder="Enter Yarn Name" class="form-control" style="display: inline-block; width: auto;" />
                        <button class="btn btn-primary" onclick="addYarn(@item.BookingMasterId)">Add Yarn</button>
                        <button class="btn btn-success" onclick="saveYarns(@item.BookingMasterId)">Save</button>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

<script>
    const newYarns = {};

    function toggleYarn(button) {
        const yarnDetailsRow = button.closest("tr").nextElementSibling;
        const isHidden = yarnDetailsRow.style.display === "none";

        yarnDetailsRow.style.display = isHidden ? "table-row" : "none";

        button.textContent = isHidden ? "▼" : "▶";
    }

    function addYarn(bookingMasterId) {
        const yarnNameInput = document.getElementById(`new-yarn-name-${bookingMasterId}`);
        const yarnList = document.getElementById(`yarn-list-${bookingMasterId}`);
        const yarnName = yarnNameInput.value.trim();

        if (yarnName) {
            if (!newYarns[bookingMasterId]) newYarns[bookingMasterId] = [];

            newYarns[bookingMasterId].push({ name: yarnName, selected: true, poQuantity: '', uom: '' });

            const newRow = document.createElement("tr");
            newRow.innerHTML = `
                    <td><input type="checkbox" checked onchange="toggleSelectYarn(this, ${bookingMasterId}, '${yarnName}')"/></td>
                    <td>New</td>
                    <td>${yarnName}</td>
                    <td><input type="text" class="form-control" placeholder="Enter PO Quantity" oninput="updatePoQuantity(this, ${bookingMasterId}, '${yarnName}')"/></td>
                        <td><input type="text" class="form-control" placeholder="Enter UOM" value="Kilogram" disabled/></td>
                    <td><button class="btn btn-danger btn-sm" onclick="removeYarn(this, ${bookingMasterId}, '${yarnName}')">Remove</button></td>
                `;
            yarnList.appendChild(newRow);

            yarnNameInput.value = "";
        } else {
            alert("Please enter a yarn name.");
        }
    }

    function toggleSelectYarn(checkbox, bookingMasterId, yarnName) {
        const yarn = newYarns[bookingMasterId].find(y => y.name === yarnName);
        if (yarn) {
            yarn.selected = checkbox.checked;
        }
    }

    function updatePoQuantity(input, bookingMasterId, yarnName) {
        const yarn = newYarns[bookingMasterId].find(y => y.name === yarnName);
        if (yarn) {
            yarn.poQuantity = input.value;
        }
    }

    function updateUom(input, bookingMasterId, yarnName) {
        const yarn = newYarns[bookingMasterId].find(y => y.name === yarnName);
        if (yarn) {
            yarn.uom = input.value;
        }
    }

    function removeYarn(button, bookingMasterId, yarnName) {
        const row = button.closest("tr");
        row.remove();

        newYarns[bookingMasterId] = newYarns[bookingMasterId].filter(y => y.name !== yarnName);
    }

    async function saveYarns(bookingMasterId) {
        if (!newYarns[bookingMasterId] || newYarns[bookingMasterId].length === 0) {
            alert("No new yarns to save.");
            return;
        }

        try {
            const response = await fetch('/YourController/SaveYarns', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    bookingMasterId: bookingMasterId,
                    yarns: newYarns[bookingMasterId]
                })
            });

            if (response.ok) {
                alert("Yarns saved successfully!");
                newYarns[bookingMasterId] = [];
            } else {
                alert("Error saving yarns.");
            }
        } catch (error) {
            console.error("Error:", error);
            alert("Failed to save yarns.");
        }
    }
</script>
